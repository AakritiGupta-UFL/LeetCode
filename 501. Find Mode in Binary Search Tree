/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution 
{
    List<Integer> list=new ArrayList<>();
    int max=Integer.MIN_VALUE;
    HashSet<Integer> ans = new HashSet<Integer>();
    public int[] findMode(TreeNode root) 
    {
        inorder(root);
       // List<Integer> list=new ArrayList<>();
        HashMap<Integer,Integer> map=new HashMap<>();
        for(int i=0;i<list.size();i++)
        {
            if(map.containsKey(list.get(i)))
            {
                map.put(list.get(i),map.get(list.get(i))+1);
            }
            else
                map.put(list.get(i),1);
        }

        
        for(int i:map.values())
      max=Math.max(max,i);
    
    for(int i:map.keySet())
    {
        if(map.get(i)==max)
        {
            ans.add(i);
            System.out.println(i);
        }
    }
    
    int a [] = new int[ans.size()];
    
    int k=0;
    
    for(Integer i:ans)
        a[k++]=i;
    
    return a;
    }
    
    public void inorder(TreeNode root)
    {
        if(root==null) return;
        inorder(root.left);
        list.add(root.val);
        inorder(root.right);
    }
}
