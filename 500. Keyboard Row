class Solution {
    public String[] findWords(String[] words) {
        Character[] second={'a','s','d','f','g','h','j','k','l'};
        Character[] first={'q','w','e','r','t','y','u','i','o','p'};
        Character[] third={'z','x','c','v','b','n','m'};
         List<String> list = new ArrayList<>();
        HashSet<Character> LineOne=new HashSet<>();
        for(int i=0;i<first.length;i++)
        {
           LineOne.add(first[i]); 
        }
        
        HashSet<Character> LineTwo=new HashSet<>();
        for(int i=0;i<second.length;i++)
        {
           LineTwo.add(second[i]); 
        }
        
        HashSet<Character> LineThree=new HashSet<>();
        for(int i=0;i<third.length;i++)
        {
           LineThree.add(third[i]); 
        }
        for (int i = 0; i < words.length; i++) {
            String word = words[i];
            if (isValidWord(word, LineOne)
               || isValidWord(word, LineTwo)
               || isValidWord(word, LineThree)) {
                list.add(word);
            }
       
    }
         return list.toArray(new String[0]);
    }
     private boolean isValidWord(String word, HashSet<Character> row) {
        word = word.toLowerCase();
        for (int j = 0; j < word.length(); j++) {
            Character c = word.charAt(j);
            if (!row.contains(c)) {
                return false;
            }
        }   
        return true;
    }
}
