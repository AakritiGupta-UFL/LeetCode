//SOLUTION 1

class Solution {
    public int subarraySum(int[] nums, int k) {
        int count=0;
      for(int start=0;start<nums.length;start++){
          for(int end=start+1;end<=nums.length;end++){
              int sum=0;
              for(int i=start;i<end;i++)
              {
                  sum+=nums[i];
              }
              if(sum==k)
                count++;  
          }
      }  
        return count;
    }
}


//SOLUTION 2

class Solution {
    public int subarraySum(int[] nums, int k) {
        int count=0;
        int[] sum=new int[nums.length + 1];
        for (int i = 1; i <= nums.length; i++)
            sum[i] = sum[i - 1] + nums[i - 1];
      for(int start=0;start<nums.length;start++){
          for(int end=start+1;end<=nums.length;end++){
              //int sum=0;
              
                  if (sum[end] - sum[start] == k)
                count++;  
          }
      }  
        return count;
    }
}


//SOLUTION 3
class Solution {
    public int subarraySum(int[] nums, int k) {
        int count=0;
        
      for(int start=0;start<nums.length;start++){
          int sum=0;
          for(int end=start;end<nums.length;end++){
              //int sum=0;
              
                  sum+=nums[end];
              if(sum==k)
                count++;  
          }
      }  
        return count;
    }
}
