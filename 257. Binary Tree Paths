/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
     List<String> ans = new ArrayList<>();
    
    public List<String> binaryTreePaths(TreeNode root) {
        if (null == root) {
            return ans;
        }
        traversal(root, String.valueOf(root.val));
        return ans;
    }

    public void traversal(TreeNode root, String path) {
        if (null == root) {
            return;
        }
        if (null == root.left && null == root.right) {
            ans.add(path);
        }
        if (null != root.left) {
            traversal(root.left, path + "->" + root.left.val);
        }
        if (null != root.right) {
            traversal(root.right, path + "->" + root.right.val);
        }
    }
}
