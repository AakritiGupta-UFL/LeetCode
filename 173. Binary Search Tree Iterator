/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class BSTIterator {
    List<Integer> list=new ArrayList<>();
    int i=0;
    
    public BSTIterator(TreeNode root) {
        if(root==null) return;
        new TreeNode(root.val);
        inorder(root);
    }
    
    public void inorder(TreeNode root){
        if(root==null) return;
        if(root.left!=null) inorder(root.left);
        list.add(root.val);
        if(root.right!=null) inorder(root.right);
    }
    
    /** @return the next smallest number */
    public int next() {
       int value=list.get(i);
       i++;
       return value;   
    }
    
    /** @return whether we have a next smallest number */
    public boolean hasNext() {
       if(i<list.size()) return true;
       return false;
    }
}

/**
 * Your BSTIterator object will be instantiated and called as such:
 * BSTIterator obj = new BSTIterator(root);
 * int param_1 = obj.next();
 * boolean param_2 = obj.hasNext();
 */
