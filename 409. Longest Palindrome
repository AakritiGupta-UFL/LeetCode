class Solution {
    public int longestPalindrome(String s) {
        if(s.length()==0 || s==null) return 0;
        boolean flag=false;
        char[] c=s.toCharArray();
        int res=0;
        Map<Character,Integer> h=new HashMap<>();
        for(int i=0;i<c.length;i++)
        {
            if(h.containsKey(c[i]))
            {
                h.put(c[i],h.get(c[i])+1);
            }
            else
                h.put(c[i],1);
        }
        
        Iterator it = h.entrySet().iterator();
    while (it.hasNext())
    {
        Map.Entry pair = (Map.Entry)it.next();
            if((int)pair.getValue()%2==1) flag=true;
            res+=(int)pair.getValue()/2;
        
    }
       if(flag==true)
        return 2*res+1;
        else return 2*res;
    }
}
