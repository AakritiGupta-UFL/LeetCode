class Solution {
    public int[] twoSum(int[] nums, int target) {
        int len=nums.length;
        boolean flag=false;
        for(int i=0;i<len;i++)
        {
            for(int j=i+1;j<len;j++)
            {
               if(nums[i]+nums[j]==target)
               {
                   flag=true;
                   return new int[] {i,j};
                }
            }
            
        }
       
           return new int[] {0,0};
    }
}

// SOLUTION 2

class Solution {
    public int[] twoSum(int[] nums, int target) {
        int[] result=new int[2];
        Map<Integer,Integer> map=new HashMap<>();
        for(int i=0;i<nums.length;i++){
           map.put(nums[i],i); 
        }
        for(int i=0;i<nums.length;i++){
            int num=target-nums[i];
            if(map.containsKey(num) && map.get(num)!=i) {
                result[0]=i;
                result[1]=map.get(num);
            }
        }
        return result;
    }
}
