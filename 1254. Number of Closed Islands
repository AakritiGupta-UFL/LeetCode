class Solution {
    public int closedIsland(int[][] grid) {
        int res=0;
        for(int i=0;i<grid.length;i++)
        {
            for(int j=0;j<grid[0].length;j++)
            {
                if(grid[i][j]==0 && dfs(i,j,grid))
                    res++;
            }
        }
        return res;
    }
    
    public boolean dfs(int i,int j,int[][] grid){
        if(i<0 || j<0 || i>=grid.length || j>=grid[0].length)
            return false;
        if(grid[i][j]==1 || grid[i][j]==2)
            return true;
        grid[i][j]=2;
        boolean left= dfs(i-1,j,grid);
        boolean right=dfs(i+1,j,grid);
        boolean up=dfs(i,j-1,grid);
        boolean down=dfs(i,j+1,grid);
        
        return left && right && up && down;
    }
}
